spring.application.name=spring-boot-app

# port設定
server.port=8080
server.forward-headers-strategy=FRAMEWORK
spring.devtools.restart.trigger-file=.reloadtrigger

# TiDB Cloud (MySQL) 接続情報
spring.datasource.url=jdbc:mysql://${TIDB_HOST}:${TIDB_PORT}/${TIDB_DB_NAME}?sslMode=VERIFY_IDENTITY&useSSL=true
spring.datasource.username=${TIDB_USER}
spring.datasource.password=${TIDB_PASSWORD}
# コネクションプール設定
spring.datasource.hikari.maximum-pool-size=1
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=5000
# JPA設定
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Supabaseとの通信用設定 (BFFが必要)
supabase.url=${SUPABASE_URL}
supabase.anon-key=${SUPABASE_ANON_KEY}

# Spring Boot独自のJWT設定 (ここからが新しい) $ openssl rand -base64 48
#jwt.secret-key=IZyJxtMEPCXoALiFOxOOs7MkTrBRHPQ2w/SX6qBH3BUvPoEqUQmLg8J1rzK/ICAF
jwt.secret-key=${JWT_SECRET_KEY}
jwt.expiration-ms=86400000

# Spring Security - OAuth2 Resource Server (JWT検証) 設定
# SupabaseのJWKS(JSON Web Key Set)エンドポイントを指定
spring.security.oauth2.resourceserver.jwt.secret-key=${SUPABASE_JWT_SECRET}

# 試してダメだった新しいやつ JWS認証
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${SUPABASE_URL}/auth/v1/.well-known/jwks.json
#spring.security.oauth2.resourceserver.jwt.issuer-uri=${SUPABASE_URL}/auth/v1

# Spring SecurityのログレベルをDEBUGに設定し、詳細な情報を出力させる
logging.level.org.springframework.security=DEBUG
# OAuth2関連のログもDEBUGに設定
logging.level.org.springframework.security.oauth2=DEBUG
